apiVersion: v1
kind: ConfigMap
metadata:
  name: alert-config
  namespace: kube-ops
data:
  alertmanager.yml: |-
    global:
      # 在没有报警的情况下声明为已解决的时间
      resolve_timeout: 5m
      # 配置邮件发送信息
      smtp_smarthost: 'smtp.163.com:25'
      smtp_from: 'kkk_en@163.com'
      smtp_auth_username: 'kkk_en@163.com'
      smtp_auth_password: 'WZOGCXPPOPOSQWMJ'
      smtp_hello: '163.com'
      smtp_require_tls: false
    # 所有报警信息进⼊后的根路由，⽤来设置报警的分发策略
    route:
      # 这⾥的标签列表是接收到报警信息后的重新分组标签，例如，接收到的报警信息⾥⾯有许多具有 cluster=A 和 alertname=LatncyHigh 这样的标签的报警信息将会批量被聚合到⼀个分组⾥⾯
      group_by: ['alertname', 'cluster']
      # 当⼀个新的报警分组被创建后，需要等待⾄少group_wait时间来初始化通知，这种⽅式可以确保您能有⾜够的时间为同⼀分组来获取多个警报，然后⼀起触发这个报警信息
      group_wait: 30s
      # 当第⼀个报警发送后，等待'group_interval'时间来发送新的⼀组报警信息
      group_interval: 5m
      # 如果⼀个报警信息已经发送成功了，等待'repeat_interval'时间来重新发送他们
      repeat_interval: 5m
      # 默认的receiver:如果⼀个报警没有被⼀个route匹配，则发送给默认的接收器
      receiver: default
      # 上⾯所有的属性都由所有⼦路由继承，并且可以在每个⼦路由上进⾏覆盖
      routes:
      - receiver: email
        group_wait: 10s
        match:
          team: node
    receivers:
    - name: 'default'
      email_configs:
      - to: '4310121@qq.com'
        send_resolved: true
    - name: 'email'
      email_configs:
      - to: '4310121@qq.com'
        send_resolved: true
