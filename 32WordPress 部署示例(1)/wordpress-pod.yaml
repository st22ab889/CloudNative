---
apiVersion: v1
kind: Pod
metadata:
  name: wordpress
  namespace: blog
spec:
  # Kubernetes的调度有简单,有复杂.指定NodeName和使用NodeSelector调度是最简单的，可以将Pod调度到期望的节点上
  # NodeName和NodeSelector使用示例如下:

  # 指定节点运行
  # nodeName: k8s-master
  
  # nodeSelector:
    # 指定调度节点为带有label标记为：cloudnil.com/role=dev的node节点
    # cloudnil.com/role: dev 

  # 一个Pod中部署两个容器，分别是wordpress和mysql
  containers:
  - name: wordpress
    image: wordpress
    # 定义镜像拉取策略."IfNotPresent"表示如果镜像在节点上已存在就不要去拉取了,这样可以加快容器运行速度
    # imagePullPolicy的默认值是always, 它表示即使节点有这个镜像，它也会去重新拉取
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 80
      name: wdport
    env:
    - name: WORDPRESS_DB_HOST
      # 因为wordpress和mysql定义在同一个Pod下,同一个Pod下的容器共享同一个网络命名空间,所以直接用localhost就可以访问
      value: localhost:3306
    - name: WORDPRESS_DB_USER
      value: wordpress
    - name: WORDPRESS_DB_PASSWORD
      value: wordpress
  - name: mysql
    image: mysql:5.7
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 3306
      name: dbport
    env:
    - name: MYSQL_ROOT_PASSWORD
      value: rootPassWord
    - name: MYSQL_DATABASE
      value: wordpress
    - name: MYSQL_USER
      value: wordpress
    - name: MYSQL_PASSWORD
      value: wordpress
    volumeMounts:
    - name: db
      mountPath: /var/lib/mysql
  volumes:
  - name: db
    # 问题: 假如Pod重启之前容器在节点1上面，数据挂载到节点1这个目录上,重启之后容器很可能就调度到节点2上，节点2的mountPath上就没有数据了
    # 如果用hostPath,最好指定"nodeSelector"或"nodeName"指定调度节点，这样应用重启后也能调度到同一个节点上.
    hostPath:
      path: /var/lib/mysql